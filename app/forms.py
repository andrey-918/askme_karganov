from django import formsfrom django.core.exceptions import ValidationErrorfrom django.contrib.auth.models import Userimport djangofrom django.forms import TextInput, Textarea, FileInputfrom app.models import *from django.forms import PasswordInputfrom django.contrib.auth.password_validation import validate_passwordfrom django import formsclass LoginForm(forms.Form):    username = forms.CharField(max_length=30)    password = forms.CharField()class RegisterForm(forms.ModelForm):    password = forms.CharField(widget=forms.PasswordInput)    repeat_password = forms.CharField(widget=forms.PasswordInput)    avatar = forms.FileInput()    class Meta:        model = User        fields = ['username', 'email', 'password']    def clean(self):        password = self.cleaned_data['password']        repeat_password = self.cleaned_data['repeat_password']        if not password or not repeat_password:            return        if password != repeat_password:            self.add_error('repeat_password', 'Passwords do not match!')            print('not matched')            return        return self.cleaned_data    def clean_username(self):        if User.objects.filter(username=self.cleaned_data['username']).exists():            self.add_error('username', 'This username is already in use')        return self.cleaned_data['username']    def clean_email(self):        if User.objects.filter(email=self.cleaned_data['email']).exists():            self.add_error('email', 'This email is already in use')        return self.cleaned_data['email']    def save(self, **kwargs):        user = User.objects.create_user(self.cleaned_data['username'], self.cleaned_data['email'],                                        self.cleaned_data['password'])        profile = Profile.objects.create(user=user)        if self.cleaned_data['avatar'] is not None:            profile.avatar = self.cleaned_data['avatar']            profile.save()        return user